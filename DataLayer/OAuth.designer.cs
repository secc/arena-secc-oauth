#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arena.Custom.SECC.OAuth.DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ArenaDB")]
	public partial class OAuthDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClientScopeData(ClientScopeData instance);
    partial void UpdateClientScopeData(ClientScopeData instance);
    partial void DeleteClientScopeData(ClientScopeData instance);
    partial void InsertClientData(ClientData instance);
    partial void UpdateClientData(ClientData instance);
    partial void DeleteClientData(ClientData instance);
    partial void InsertScopeData(ScopeData instance);
    partial void UpdateScopeData(ScopeData instance);
    partial void DeleteScopeData(ScopeData instance);
    partial void InsertAuthorizationData(AuthorizationData instance);
    partial void UpdateAuthorizationData(AuthorizationData instance);
    partial void DeleteAuthorizationData(AuthorizationData instance);
    partial void InsertPersonMergedData(PersonMergedData instance);
    partial void UpdatePersonMergedData(PersonMergedData instance);
    partial void DeletePersonMergedData(PersonMergedData instance);
    #endregion
		
		public OAuthDataContext() : 
				base(global::Arena.Custom.SECC.OAuth.Properties.Settings.Default.ArenaDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OAuthDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OAuthDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OAuthDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OAuthDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ClientScopeData> ClientScopeDatas
		{
			get
			{
				return this.GetTable<ClientScopeData>();
			}
		}
		
		public System.Data.Linq.Table<ClientData> ClientDatas
		{
			get
			{
				return this.GetTable<ClientData>();
			}
		}
		
		public System.Data.Linq.Table<ScopeData> ScopeDatas
		{
			get
			{
				return this.GetTable<ScopeData>();
			}
		}
		
		public System.Data.Linq.Table<AuthorizationData> AuthorizationDatas
		{
			get
			{
				return this.GetTable<AuthorizationData>();
			}
		}
		
		public System.Data.Linq.Table<PersonMergedData> PersonMergedDatas
		{
			get
			{
				return this.GetTable<PersonMergedData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cust_secc_oauth_client_scope")]
	public partial class ClientScopeData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _client_id;
		
		private int _scope_id;
		
		private string _created_by;
		
		private string _modified_by;
		
		private System.DateTime _date_created;
		
		private System.DateTime _date_modified;
		
		private bool _active;
		
		private EntityRef<ClientData> _ClientName;
		
		private EntityRef<ScopeData> _ScopeData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onscope_idChanging(int value);
    partial void Onscope_idChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Ondate_modifiedChanging(System.DateTime value);
    partial void Ondate_modifiedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public ClientScopeData()
		{
			this._ClientName = default(EntityRef<ClientData>);
			this._ScopeData = default(EntityRef<ScopeData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._ClientName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scope_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int scope_id
		{
			get
			{
				return this._scope_id;
			}
			set
			{
				if ((this._scope_id != value))
				{
					if (this._ScopeData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onscope_idChanging(value);
					this.SendPropertyChanging();
					this._scope_id = value;
					this.SendPropertyChanged("scope_id");
					this.Onscope_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_modified", DbType="DateTime NOT NULL")]
		public System.DateTime date_modified
		{
			get
			{
				return this._date_modified;
			}
			set
			{
				if ((this._date_modified != value))
				{
					this.Ondate_modifiedChanging(value);
					this.SendPropertyChanging();
					this._date_modified = value;
					this.SendPropertyChanged("date_modified");
					this.Ondate_modifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientData_ClientScopeData", Storage="_ClientName", ThisKey="client_id", OtherKey="client_id", IsForeignKey=true)]
		public ClientData ClientData
		{
			get
			{
				return this._ClientName.Entity;
			}
			set
			{
				ClientData previousValue = this._ClientName.Entity;
				if (((previousValue != value) 
							|| (this._ClientName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientName.Entity = null;
						previousValue.ClientScopeDatas.Remove(this);
					}
					this._ClientName.Entity = value;
					if ((value != null))
					{
						value.ClientScopeDatas.Add(this);
						this._client_id = value.client_id;
					}
					else
					{
						this._client_id = default(int);
					}
					this.SendPropertyChanged("ClientData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScopeData_ClientScopeData", Storage="_ScopeData", ThisKey="scope_id", OtherKey="scope_id", IsForeignKey=true)]
		public ScopeData ScopeData
		{
			get
			{
				return this._ScopeData.Entity;
			}
			set
			{
				ScopeData previousValue = this._ScopeData.Entity;
				if (((previousValue != value) 
							|| (this._ScopeData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScopeData.Entity = null;
						previousValue.ClientScopeDatas.Remove(this);
					}
					this._ScopeData.Entity = value;
					if ((value != null))
					{
						value.ClientScopeDatas.Add(this);
						this._scope_id = value.scope_id;
					}
					else
					{
						this._scope_id = default(int);
					}
					this.SendPropertyChanged("ScopeData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cust_secc_oauth_client")]
	public partial class ClientData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _client_id;
		
		private string _client_name;
		
		private System.Guid _api_key;
		
		private System.Guid _api_secret;
		
		private string _callback_url;
		
		private string _created_by;
		
		private string _modified_by;
		
		private System.DateTime _date_created;
		
		private System.DateTime _date_modified;
		
		private bool _active;
		
		private EntitySet<ClientScopeData> _ClientScopeDatas;
		
		private EntitySet<AuthorizationData> _AuthorizationDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onclient_nameChanging(string value);
    partial void Onclient_nameChanged();
    partial void Onapi_keyChanging(System.Guid value);
    partial void Onapi_keyChanged();
    partial void Onapi_secretChanging(System.Guid value);
    partial void Onapi_secretChanged();
    partial void Oncallback_urlChanging(string value);
    partial void Oncallback_urlChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Ondate_modifiedChanging(System.DateTime value);
    partial void Ondate_modifiedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public ClientData()
		{
			this._ClientScopeDatas = new EntitySet<ClientScopeData>(new Action<ClientScopeData>(this.attach_ClientScopeDatas), new Action<ClientScopeData>(this.detach_ClientScopeDatas));
			this._AuthorizationDatas = new EntitySet<AuthorizationData>(new Action<AuthorizationData>(this.attach_AuthorizationDatas), new Action<AuthorizationData>(this.detach_AuthorizationDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string client_name
		{
			get
			{
				return this._client_name;
			}
			set
			{
				if ((this._client_name != value))
				{
					this.Onclient_nameChanging(value);
					this.SendPropertyChanging();
					this._client_name = value;
					this.SendPropertyChanged("client_name");
					this.Onclient_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_api_key", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid api_key
		{
			get
			{
				return this._api_key;
			}
			set
			{
				if ((this._api_key != value))
				{
					this.Onapi_keyChanging(value);
					this.SendPropertyChanging();
					this._api_key = value;
					this.SendPropertyChanged("api_key");
					this.Onapi_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_api_secret", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid api_secret
		{
			get
			{
				return this._api_secret;
			}
			set
			{
				if ((this._api_secret != value))
				{
					this.Onapi_secretChanging(value);
					this.SendPropertyChanging();
					this._api_secret = value;
					this.SendPropertyChanged("api_secret");
					this.Onapi_secretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_callback_url", DbType="VarChar(255)")]
		public string callback_url
		{
			get
			{
				return this._callback_url;
			}
			set
			{
				if ((this._callback_url != value))
				{
					this.Oncallback_urlChanging(value);
					this.SendPropertyChanging();
					this._callback_url = value;
					this.SendPropertyChanged("callback_url");
					this.Oncallback_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_modified", DbType="DateTime NOT NULL")]
		public System.DateTime date_modified
		{
			get
			{
				return this._date_modified;
			}
			set
			{
				if ((this._date_modified != value))
				{
					this.Ondate_modifiedChanging(value);
					this.SendPropertyChanging();
					this._date_modified = value;
					this.SendPropertyChanged("date_modified");
					this.Ondate_modifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientData_ClientScopeData", Storage="_ClientScopeDatas", ThisKey="client_id", OtherKey="client_id")]
		public EntitySet<ClientScopeData> ClientScopeDatas
		{
			get
			{
				return this._ClientScopeDatas;
			}
			set
			{
				this._ClientScopeDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientData_AuthorizationData", Storage="_AuthorizationDatas", ThisKey="client_id", OtherKey="client_id")]
		public EntitySet<AuthorizationData> AuthorizationDatas
		{
			get
			{
				return this._AuthorizationDatas;
			}
			set
			{
				this._AuthorizationDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientScopeDatas(ClientScopeData entity)
		{
			this.SendPropertyChanging();
			entity.ClientData = this;
		}
		
		private void detach_ClientScopeDatas(ClientScopeData entity)
		{
			this.SendPropertyChanging();
			entity.ClientData = null;
		}
		
		private void attach_AuthorizationDatas(AuthorizationData entity)
		{
			this.SendPropertyChanging();
			entity.ClientData = this;
		}
		
		private void detach_AuthorizationDatas(AuthorizationData entity)
		{
			this.SendPropertyChanging();
			entity.ClientData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cust_secc_oauth_scope")]
	public partial class ScopeData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _scope_id;
		
		private string _scope_identifier;
		
		private string _scope_description;
		
		private string _created_by;
		
		private string _modified_by;
		
		private System.DateTime _date_created;
		
		private System.DateTime _date_modified;
		
		private bool _active;
		
		private EntitySet<ClientScopeData> _ClientScopeDatas;
		
		private EntitySet<AuthorizationData> _AuthorizationDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onscope_idChanging(int value);
    partial void Onscope_idChanged();
    partial void Onscope_identifierChanging(string value);
    partial void Onscope_identifierChanged();
    partial void Onscope_descriptionChanging(string value);
    partial void Onscope_descriptionChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Ondate_modifiedChanging(System.DateTime value);
    partial void Ondate_modifiedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public ScopeData()
		{
			this._ClientScopeDatas = new EntitySet<ClientScopeData>(new Action<ClientScopeData>(this.attach_ClientScopeDatas), new Action<ClientScopeData>(this.detach_ClientScopeDatas));
			this._AuthorizationDatas = new EntitySet<AuthorizationData>(new Action<AuthorizationData>(this.attach_AuthorizationDatas), new Action<AuthorizationData>(this.detach_AuthorizationDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scope_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int scope_id
		{
			get
			{
				return this._scope_id;
			}
			set
			{
				if ((this._scope_id != value))
				{
					this.Onscope_idChanging(value);
					this.SendPropertyChanging();
					this._scope_id = value;
					this.SendPropertyChanged("scope_id");
					this.Onscope_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scope_identifier", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string scope_identifier
		{
			get
			{
				return this._scope_identifier;
			}
			set
			{
				if ((this._scope_identifier != value))
				{
					this.Onscope_identifierChanging(value);
					this.SendPropertyChanging();
					this._scope_identifier = value;
					this.SendPropertyChanged("scope_identifier");
					this.Onscope_identifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scope_description", DbType="VarChar(MAX)")]
		public string scope_description
		{
			get
			{
				return this._scope_description;
			}
			set
			{
				if ((this._scope_description != value))
				{
					this.Onscope_descriptionChanging(value);
					this.SendPropertyChanging();
					this._scope_description = value;
					this.SendPropertyChanged("scope_description");
					this.Onscope_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_modified", DbType="DateTime NOT NULL")]
		public System.DateTime date_modified
		{
			get
			{
				return this._date_modified;
			}
			set
			{
				if ((this._date_modified != value))
				{
					this.Ondate_modifiedChanging(value);
					this.SendPropertyChanging();
					this._date_modified = value;
					this.SendPropertyChanged("date_modified");
					this.Ondate_modifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScopeData_ClientScopeData", Storage="_ClientScopeDatas", ThisKey="scope_id", OtherKey="scope_id")]
		public EntitySet<ClientScopeData> ClientScopeDatas
		{
			get
			{
				return this._ClientScopeDatas;
			}
			set
			{
				this._ClientScopeDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScopeData_AuthorizationData", Storage="_AuthorizationDatas", ThisKey="scope_id", OtherKey="scope_id")]
		public EntitySet<AuthorizationData> AuthorizationDatas
		{
			get
			{
				return this._AuthorizationDatas;
			}
			set
			{
				this._AuthorizationDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientScopeDatas(ClientScopeData entity)
		{
			this.SendPropertyChanging();
			entity.ScopeData = this;
		}
		
		private void detach_ClientScopeDatas(ClientScopeData entity)
		{
			this.SendPropertyChanging();
			entity.ScopeData = null;
		}
		
		private void attach_AuthorizationDatas(AuthorizationData entity)
		{
			this.SendPropertyChanging();
			entity.ScopeData = this;
		}
		
		private void detach_AuthorizationDatas(AuthorizationData entity)
		{
			this.SendPropertyChanging();
			entity.ScopeData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cust_secc_oauth_authorization")]
	public partial class AuthorizationData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _authorization_id;
		
		private int _client_id;
		
		private int _scope_id;
		
		private string _login_id;
		
		private System.DateTime _date_created;
		
		private bool _active;
		
		private EntityRef<ClientData> _ClientData;
		
		private EntityRef<ScopeData> _ScopeData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onauthorization_idChanging(int value);
    partial void Onauthorization_idChanged();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onscope_idChanging(int value);
    partial void Onscope_idChanged();
    partial void Onlogin_idChanging(string value);
    partial void Onlogin_idChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public AuthorizationData()
		{
			this._ClientData = default(EntityRef<ClientData>);
			this._ScopeData = default(EntityRef<ScopeData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorization_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int authorization_id
		{
			get
			{
				return this._authorization_id;
			}
			set
			{
				if ((this._authorization_id != value))
				{
					this.Onauthorization_idChanging(value);
					this.SendPropertyChanging();
					this._authorization_id = value;
					this.SendPropertyChanged("authorization_id");
					this.Onauthorization_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int NOT NULL")]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._ClientData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scope_id", DbType="Int NOT NULL")]
		public int scope_id
		{
			get
			{
				return this._scope_id;
			}
			set
			{
				if ((this._scope_id != value))
				{
					if (this._ScopeData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onscope_idChanging(value);
					this.SendPropertyChanging();
					this._scope_id = value;
					this.SendPropertyChanged("scope_id");
					this.Onscope_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientData_AuthorizationData", Storage="_ClientData", ThisKey="client_id", OtherKey="client_id", IsForeignKey=true)]
		public ClientData ClientData
		{
			get
			{
				return this._ClientData.Entity;
			}
			set
			{
				ClientData previousValue = this._ClientData.Entity;
				if (((previousValue != value) 
							|| (this._ClientData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientData.Entity = null;
						previousValue.AuthorizationDatas.Remove(this);
					}
					this._ClientData.Entity = value;
					if ((value != null))
					{
						value.AuthorizationDatas.Add(this);
						this._client_id = value.client_id;
					}
					else
					{
						this._client_id = default(int);
					}
					this.SendPropertyChanged("ClientData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScopeData_AuthorizationData", Storage="_ScopeData", ThisKey="scope_id", OtherKey="scope_id", IsForeignKey=true)]
		public ScopeData ScopeData
		{
			get
			{
				return this._ScopeData.Entity;
			}
			set
			{
				ScopeData previousValue = this._ScopeData.Entity;
				if (((previousValue != value) 
							|| (this._ScopeData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScopeData.Entity = null;
						previousValue.AuthorizationDatas.Remove(this);
					}
					this._ScopeData.Entity = value;
					if ((value != null))
					{
						value.AuthorizationDatas.Add(this);
						this._scope_id = value.scope_id;
					}
					else
					{
						this._scope_id = default(int);
					}
					this.SendPropertyChanged("ScopeData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.core_person_merged")]
	public partial class PersonMergedData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _old_person_id;
		
		private int _new_person_id;
		
		private System.DateTime _date_created;
		
		private string _created_by;
		
		private System.DateTime _original_date_created;
		
		private string _original_created_by;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onold_person_idChanging(int value);
    partial void Onold_person_idChanged();
    partial void Onnew_person_idChanging(int value);
    partial void Onnew_person_idChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Onoriginal_date_createdChanging(System.DateTime value);
    partial void Onoriginal_date_createdChanged();
    partial void Onoriginal_created_byChanging(string value);
    partial void Onoriginal_created_byChanged();
    #endregion
		
		public PersonMergedData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_old_person_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int old_person_id
		{
			get
			{
				return this._old_person_id;
			}
			set
			{
				if ((this._old_person_id != value))
				{
					this.Onold_person_idChanging(value);
					this.SendPropertyChanging();
					this._old_person_id = value;
					this.SendPropertyChanged("old_person_id");
					this.Onold_person_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_new_person_id", DbType="Int NOT NULL")]
		public int new_person_id
		{
			get
			{
				return this._new_person_id;
			}
			set
			{
				if ((this._new_person_id != value))
				{
					this.Onnew_person_idChanging(value);
					this.SendPropertyChanging();
					this._new_person_id = value;
					this.SendPropertyChanged("new_person_id");
					this.Onnew_person_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_original_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime original_date_created
		{
			get
			{
				return this._original_date_created;
			}
			set
			{
				if ((this._original_date_created != value))
				{
					this.Onoriginal_date_createdChanging(value);
					this.SendPropertyChanging();
					this._original_date_created = value;
					this.SendPropertyChanged("original_date_created");
					this.Onoriginal_date_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_original_created_by", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string original_created_by
		{
			get
			{
				return this._original_created_by;
			}
			set
			{
				if ((this._original_created_by != value))
				{
					this.Onoriginal_created_byChanging(value);
					this.SendPropertyChanging();
					this._original_created_by = value;
					this.SendPropertyChanged("original_created_by");
					this.Onoriginal_created_byChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
